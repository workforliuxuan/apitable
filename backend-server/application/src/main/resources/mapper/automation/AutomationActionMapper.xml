<?xml version="1.0" encoding="UTF-8" ?>
<!--
 APITable <https://github.com/apitable/apitable>
 Copyright (C) 2022 APITable Ltd. <https://apitable.com>

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU Affero General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Affero General Public License for more details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.apitable.automation.mapper.AutomationActionMapper">
    <select id="selectByRobotIdIds"
            resultType="com.apitable.automation.entity.AutomationActionEntity">
        SELECT *
        FROM ${tablePrefix}automation_action
        WHERE robot_id IN
        <foreach item="item" index="index" collection="robotIds" open="("
                 separator="," close=")">
            #{item}
        </foreach>
        AND is_deleted = 0
    </select>

    <insert id="insertList">
        INSERT INTO ${tablePrefix}automation_action(id, robot_id,
                                                    action_type_id,
                                                    action_id, prev_action_id,
                                                    input, created_by,
                                                    updated_by)VALUES
        <foreach collection="entities" item="element" index="index"
                 separator=",">
            (#{element.id}, #{element.robotId}, #{element.actionTypeId},
             #{element.actionId}, #{element.prevActionId}, #{element.input},
             #{element.createdBy}, #{element.updatedBy})
        </foreach>
    </insert>

    <update id="updateActionTypeIdAndInputByRobotId">
        UPDATE ${tablePrefix}automation_action
        SET action_type_id = #{updatedActionTypeId},
            `input`        = #{updatedInput}
        WHERE robot_id = #{robotId}
    </update>
</mapper>
